[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers" ;*/*:dumpStructureTo C:/Users/SAK/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 57722, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 11.0.10)
[debug]       Load.loadUnit: plugins took 2889.5737ms
[debug]       Load.loadUnit: defsScala took 0.0122ms
[debug] [Loading] Scanning directory C:\Users\SAK\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SAK\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2196.7889 ms
[debug]           Load.resolveProject(global-plugins) took 357.1647ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\SAK\.sbt\1.0\plugins, plugins: List(<none>))) took 2578.3516ms
[debug] [Loading] Done in C:\Users\SAK\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 2751.299ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0207ms
[debug]     Load.loadUnit(file:/C:/Users/SAK/.sbt/1.0/plugins/, ...) took 5682.0077ms
[debug]   Load.apply: load took 5814.1197ms
[debug]   Load.apply: resolveProjects took 0.3337ms
[debug]   Load.apply: finalTransforms took 128.3531ms
[debug]   Load.apply: config.delegates took 0.6139ms
[debug]   Load.apply: Def.make(settings)... took 1752.3283ms
[debug]   Load.apply: structureIndex took 101.9773ms
[debug]   Load.apply: mkStreams took 1.533ms
[info] loading global plugins from C:\Users\SAK\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 18598.495ms
[debug]           Load.loadUnit: plugins took 1025.0563ms
[debug]           Load.loadUnit: defsScala took 0.0065ms
[debug] [Loading] Scanning directory C:\Users\SAK\IdeaProjects\DS_SpellChecker\project
[debug]             Load.loadUnit: mkEval took 61.698ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SAK\IdeaProjects\DS_SpellChecker\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2733 ms
[info] loading settings for project ds_spellchecker-build from idea.sbt ...
[debug]               Load.resolveProject(ds_spellchecker-build) took 26.715ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ds_spellchecker-build, base: C:\Users\SAK\IdeaProjects\DS_SpellChecker\project, plugins: List(<none>))) took 29.749ms
[debug] [Loading] Done in C:\Users\SAK\IdeaProjects\DS_SpellChecker\project, returning: (ds_spellchecker-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1037.284ms
[debug]           Load.loadUnit: cleanEvalClasses took 107.3197ms
[debug]         Load.loadUnit(file:/C:/Users/SAK/IdeaProjects/DS_SpellChecker/project/, ...) took 2171.0479ms
[debug]       Load.apply: load took 2173.1604ms
[debug]       Load.apply: resolveProjects took 0.1747ms
[debug]       Load.apply: finalTransforms took 9.4841ms
[debug]       Load.apply: config.delegates took 0.3411ms
[debug]       Load.apply: Def.make(settings)... took 995.468ms
[debug]       Load.apply: structureIndex took 41.7135ms
[debug]       Load.apply: mkStreams took 0.0075ms
[info] loading project definition from C:\Users\SAK\IdeaProjects\DS_SpellChecker\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7234.1672ms
[debug]     Load.loadUnit: defsScala took 0.0086ms
[debug] [Loading] Scanning directory C:\Users\SAK\IdeaProjects\DS_SpellChecker
[debug]       Load.loadUnit: mkEval took 0.735ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SAK\IdeaProjects\DS_SpellChecker, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8227 ms
[info] loading settings for project ds_spellchecker from build.sbt ...
[debug]         Load.resolveProject(ds_spellchecker) took 474.4726ms
[debug]       Load.loadTransitive: finalizeProject(Project(id ds_spellchecker, base: C:\Users\SAK\IdeaProjects\DS_SpellChecker, plugins: List(<none>))) took 477.2347ms
[debug] [Loading] Done in C:\Users\SAK\IdeaProjects\DS_SpellChecker, returning: (ds_spellchecker)
[debug]     Load.loadUnit: loadedProjectsRaw took 21692.1378ms
[debug]     Load.loadUnit: cleanEvalClasses took 41.6688ms
[debug]   Load.loadUnit(file:/C:/Users/SAK/IdeaProjects/DS_SpellChecker/, ...) took 28968.6248ms
[debug] Load.apply: load took 28971.2462ms
[debug] Load.apply: resolveProjects took 0.1942ms
[debug] Load.apply: finalTransforms took 221.8131ms
[debug] Load.apply: config.delegates took 0.3439ms
[debug] Load.apply: Def.make(settings)... took 488.0401ms
[debug] Load.apply: structureIndex took 226.6854ms
[debug] Load.apply: mkStreams took 0.0075ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to DS_SpellChecker (in build file:/C:/Users/SAK/IdeaProjects/DS_SpellChecker/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to DS_SpellChecker (in build file:/C:/Users/SAK/IdeaProjects/DS_SpellChecker/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/SAK/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] There may be incompatibilities among your library dependencies; run 'evicted' to see detailed eviction warnings.
[warn] There may be incompatibilities among your library dependencies; run 'evicted' to see detailed eviction warnings.
[info] Writing structure to C:\Users\SAK\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 213 s (03:33), completed 19-Apr-2021, 11:07:33 PM
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to DS_SpellChecker (in build file:/C:/Users/SAK/IdeaProjects/DS_SpellChecker/)
[debug] > Exec(set ideaPort in Global := 57722, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to DS_SpellChecker (in build file:/C:/Users/SAK/IdeaProjects/DS_SpellChecker/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
[warn] In the last 44318 seconds, 13.79 (0.0%) were spent in GC. [Heap: 0.74GB free of 0.87GB, max 1.50GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[warn] In the last 4622 seconds, 25.221 (0.5%) were spent in GC. [Heap: 0.74GB free of 0.87GB, max 1.50GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
